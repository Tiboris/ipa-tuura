---
name: Pull request pre-check build & test

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0

  test-on-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install pip
        run: |
          python -m pip install --upgrade pip

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install -r src/install/requirements.txt

      # TBD: use sssd-container image with system dependencies included
      - name: Install system dependencies
        run: |
          sudo apt update && sudo apt install build-essential libdbus-glib-1-dev libgirepository1.0-dev
          pip install dbus-python

      - name: Run Tests
        run: |
          python src/ipa-tuura/manage.py test

  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.event.number || github.ref_name  }}

    name: build the docker image
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up QEMU for docker
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: print IMAGE_TAG to be used
        run: echo "${{ env.IMAGE_TAG }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push the image with given tag
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: "${{ secrets.REGISTRY_NAMESPACE }}/${{ github.event.repository.name }}:${{github.event.number}}"

  # test:
  #   name: test the built image
  #   runs-on: ubuntu-latest
  #   container:
  # yamllint disable-line rule:line-length
  #     image: "${{ secrets.CONTAINER_REGISTRY }}/repository/${{ secrets.REGISTRY_NAMESPACE }}/${{ github.event.repository.name }}:${{github.event.number}}"
  #   needs: [pre-commit, build, test-on-ubuntu]
  #   steps:
  #     - name: Display OS version
  #       run: cat /etc/redhat-release || uname -a
